/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoDatos.ProductoData;
import Entidades.PanelPersonalizado;
import Entidades.Producto;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nstut
 */
public class ProductosModificar extends javax.swing.JInternalFrame {
    DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int fila, int column) {
                if (column == 0) {
                    return false;
                }else{
                    return true;
                }
        }
    };    
    PanelPersonalizado fondo = new PanelPersonalizado("/imagenes/fondoInternal2.jpg");
    /**
     * Creates new form ProductosModificar
     */
    public ProductosModificar() {
        this.setContentPane(fondo);
        initComponents();
        this.setLocation(35, 10);
        armarCabecera();
        vaciarTabla();
        cargarActivos();
        mostrarContenido();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jrActivos = new javax.swing.JRadioButton();
        jrInactivos = new javax.swing.JRadioButton();
        jtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablaProductos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jbAgregarProducto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jbActualizar = new javax.swing.JButton();
        jbBaja = new javax.swing.JButton();
        jbAlta = new javax.swing.JButton();
        jbVolver = new javax.swing.JButton();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actualizar productos del cat√°logo ");

        jrActivos.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jrActivos.setForeground(new java.awt.Color(255, 255, 255));
        jrActivos.setSelected(true);
        jrActivos.setText("activos");
        jrActivos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrActivos.setOpaque(false);
        jrActivos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrActivosItemStateChanged(evt);
            }
        });
        jrActivos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrActivosStateChanged(evt);
            }
        });
        jrActivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrActivosMouseClicked(evt);
            }
        });
        jrActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrActivosActionPerformed(evt);
            }
        });
        jrActivos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jrActivosPropertyChange(evt);
            }
        });

        jrInactivos.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrameTitlePane.darcula.backgroundColor"));
        jrInactivos.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jrInactivos.setForeground(new java.awt.Color(255, 255, 255));
        jrInactivos.setText("inactivos");
        jrInactivos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrInactivos.setOpaque(false);
        jrInactivos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrInactivosItemStateChanged(evt);
            }
        });
        jrInactivos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrInactivosStateChanged(evt);
            }
        });
        jrInactivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrInactivosMouseClicked(evt);
            }
        });
        jrInactivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInactivosActionPerformed(evt);
            }
        });

        jtNombre.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        jPanel1.setOpaque(false);

        jtTablaProductos.setFont(new java.awt.Font("Candara", 0, 16)); // NOI18N
        jtTablaProductos.setForeground(new java.awt.Color(255, 255, 255));
        jtTablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtTablaProductos.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jtTablaProductos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("(Debe presionar \"enter\" antes de intentar actualizar el valor.)");

        jbAgregarProducto.setBackground(new java.awt.Color(0, 153, 51));
        jbAgregarProducto.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jbAgregarProducto.setForeground(new java.awt.Color(255, 255, 255));
        jbAgregarProducto.setText("Agregar nuevo producto");
        jbAgregarProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarProductoActionPerformed(evt);
            }
        });

        jPanel2.setOpaque(false);

        jbActualizar.setBackground(new java.awt.Color(0, 153, 255));
        jbActualizar.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jbActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jbActualizar.setText("Actualizar");
        jbActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbBaja.setBackground(new java.awt.Color(255, 0, 0));
        jbBaja.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jbBaja.setForeground(new java.awt.Color(255, 255, 255));
        jbBaja.setText("Baja");
        jbBaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBajaActionPerformed(evt);
            }
        });

        jbAlta.setBackground(new java.awt.Color(0, 153, 51));
        jbAlta.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jbAlta.setForeground(new java.awt.Color(255, 255, 255));
        jbAlta.setText("Alta");
        jbAlta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAlta.setEnabled(false);
        jbAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaActionPerformed(evt);
            }
        });

        jbVolver.setBackground(new java.awt.Color(40, 40, 40));
        jbVolver.setFont(new java.awt.Font("Candara", 1, 16)); // NOI18N
        jbVolver.setForeground(new java.awt.Color(255, 255, 255));
        jbVolver.setText("Volver");
        jbVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAlta)
                .addGap(40, 40, 40)
                .addComponent(jbBaja)
                .addGap(39, 39, 39)
                .addComponent(jbActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbVolver)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jrActivos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrInactivos)
                                .addGap(99, 99, 99))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(114, 114, 114))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrInactivos)
                    .addComponent(jrActivos))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrActivosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrActivosActionPerformed

    private void jrInactivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInactivosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrInactivosActionPerformed

    private void jrActivosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jrActivosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jrActivosPropertyChange

    private void jrActivosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrActivosStateChanged
       
    }//GEN-LAST:event_jrActivosStateChanged

    private void jrInactivosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrInactivosStateChanged
     
    }//GEN-LAST:event_jrInactivosStateChanged

    private void jrActivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrActivosMouseClicked
       
       
    }//GEN-LAST:event_jrActivosMouseClicked

    private void jrInactivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrInactivosMouseClicked

    }//GEN-LAST:event_jrInactivosMouseClicked

    private void jrActivosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrActivosItemStateChanged
        vaciarTabla ();
       if (jrActivos.isSelected()) {
        jrInactivos.setSelected(false);
        jbAlta.setEnabled(false);
        jbBaja.setEnabled(true);
        jbActualizar.setEnabled(true);
        cargarActivos ();
    } else {
        jrInactivos.setSelected(true);
        jbAlta.setEnabled(true);
        jbBaja.setEnabled(false);
        jbActualizar.setEnabled(false);
    }
    }//GEN-LAST:event_jrActivosItemStateChanged

    private void jrInactivosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrInactivosItemStateChanged
        vaciarTabla ();
        if (jrInactivos.isSelected()) {
        jrActivos.setSelected(false);
        jbAlta.setEnabled(true);
        jbBaja.setEnabled(false);
        jbActualizar.setEnabled(false);
        cargarInactivos ();
        } else {
        jrActivos.setSelected(true);
        jbAlta.setEnabled(false);
        jbBaja.setEnabled(true);
        jbActualizar.setEnabled(true);
        
    }
    }//GEN-LAST:event_jrInactivosItemStateChanged

    private void jtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyReleased
        if (jrActivos.isSelected()) {
            vaciarTabla();
            cargarActivos ();
        } else {
            vaciarTabla();
            cargarInactivos ();
        }
        
    }//GEN-LAST:event_jtNombreKeyReleased

    private void jbAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaActionPerformed
        if (jtTablaProductos.getSelectedRowCount() > 0) {
            ProductoData prod = new ProductoData();
            int exito = 0;
            for (int i = 0; i < jtTablaProductos.getSelectedRowCount(); i++) {
                int fila = jtTablaProductos.getSelectedRows()[i];
                int id = Integer.parseInt(jtTablaProductos.getValueAt(fila, 0).toString());
                if(prod.altaProducto(id) > 0) {
                    exito++;
                }
            }
            if (exito == 1) {
                JOptionPane.showMessageDialog(null, "Se di√≥ de alta el producto.");
            } else if (exito > 1) {
                JOptionPane.showMessageDialog(null, "Se dieron de alta los productos.");
            }
            vaciarTabla();
            cargarInactivos ();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto.");
        }
        
    }//GEN-LAST:event_jbAltaActionPerformed

    private void jbBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBajaActionPerformed

        if (jtTablaProductos.getSelectedRowCount() > 0) {
            ProductoData prod = new ProductoData();
            int exito = 0;
            for (int i = 0; i < jtTablaProductos.getSelectedRowCount(); i++) {
                int fila = jtTablaProductos.getSelectedRows()[i];
                int id = Integer.parseInt(jtTablaProductos.getValueAt(fila, 0).toString());
                if(prod.eliminarProducto(id) > 0) {
                    exito++;
                }
            }
            if (exito == 1) {
                JOptionPane.showMessageDialog(null, "Se di√≥ de baja el producto.");
            } else if (exito > 1) {
                JOptionPane.showMessageDialog(null, "Se dieron de baja los productos.");
            }
            vaciarTabla();
            cargarActivos ();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto.");
        }
        
    }//GEN-LAST:event_jbBajaActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        ProductoData prod = new ProductoData();
        int fila = jtTablaProductos.getSelectedRow();
        try {
            if( fila >= 0) {
                int id = Integer.parseInt(jtTablaProductos.getValueAt(fila, 0).toString());
                String nombre = jtTablaProductos.getValueAt(fila, 1).toString();
                double precio = Double.parseDouble(jtTablaProductos.getValueAt(fila, 2).toString());

                prod.modificarProducto(nombre, precio, id);
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un producto.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El precio debe ser un valor numerico.");
        }
            vaciarTabla();
            if (jrActivos.isSelected()) {
                cargarActivos ();
            }
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarProductoActionPerformed
        this.dispose();
        MenuPrincipal.Escritorio.removeAll();
        MenuPrincipal.Escritorio.repaint();
        ProductosAgregar pa = new ProductosAgregar();
        pa.setVisible(true);
        MenuPrincipal.Escritorio.add(pa);
        MenuPrincipal.Escritorio.moveToFront(pa);
    }//GEN-LAST:event_jbAgregarProductoActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        
    }//GEN-LAST:event_formInternalFrameClosing

    private void jbVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbVolverActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        MenuPrincipal.Escritorio.add(MenuPrincipal.jpBotonesPanel);
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbAgregarProducto;
    private javax.swing.JButton jbAlta;
    private javax.swing.JButton jbBaja;
    private javax.swing.JButton jbVolver;
    private javax.swing.JRadioButton jrActivos;
    private javax.swing.JRadioButton jrInactivos;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTable jtTablaProductos;
    // End of variables declaration//GEN-END:variables

private void armarCabecera(){
    modelo.addColumn("ID");
    modelo.addColumn("Nombre");
    modelo.addColumn("Precio");
    jtTablaProductos.setModel(modelo);
    jtTablaProductos.setAutoResizeMode(AUTO_RESIZE_ALL_COLUMNS);
}
private void vaciarTabla () {
    for (int i = modelo.getRowCount()-1; i >= 0;i--){
        modelo.removeRow(i);
    }
}
private void cargarActivos (){
        ProductoData prod = new ProductoData();
        List <Producto> listaActivos = prod.listarProductos();
        
        for (Producto aux : listaActivos){
            if (aux.isEstado()){
                if(aux.getNombre().toUpperCase().startsWith(jtNombre.getText().toUpperCase()) || jtNombre.getText().equals("") ) {
                    modelo.addRow(new Object[]{aux.getId_producto(),aux.getNombre(),aux.getPrecio()});
                }
            }
        }
}

private void cargarInactivos (){
        ProductoData prod = new ProductoData();
        List <Producto> listaActivos = prod.listarProductos();
        
        for (Producto aux : listaActivos){
            if (!aux.isEstado()){
                if(aux.getNombre().toUpperCase().startsWith(jtNombre.getText().toUpperCase()) || jtNombre.getText().equals("") ) {
                modelo.addRow(new Object[]{aux.getId_producto(),aux.getNombre(),aux.getPrecio()});
                }
            }
        }    
}

private void mostrarContenido() {
    if (MenuPrincipal.mesero) {
        jrActivos.setVisible(false);
        jrInactivos.setVisible(false);
        jbActualizar.setVisible(false);
        jbAlta.setVisible(false);
        jbAgregarProducto.setVisible(false);
        jbBaja.setVisible(false);
        jPanel1.setSize(405, 300);
    }
}
// Agregar KeyListener al JTextField para detectar la tecla "Enter"
//        jtContrasenia.addKeyListener(new KeyAdapter() {
//            public void keyPressed(KeyEvent e) {
//                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
//                    realizarAccionIngresar();
//                }
//            }
//        });

}
