/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoDatos.MesaData;
import AccesoDatos.MeseroData;
import AccesoDatos.PedidoData;
import AccesoDatos.ProductoData;
import AccesoDatos.ProductosPedidosData;
import Entidades.Mesa;
import Entidades.Mesero;
import Entidades.Producto;
import Entidades.ProductosPedidos;
import static Vistas.MenuPrincipal.Escritorio;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nstut
 */
public class PedidosCargar extends javax.swing.JInternalFrame {
    private static int id_pedido;
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable (int fila, int columna) {
            return false;
        }
    };
    
    public PedidosCargar() {
        initComponents();
        armarCabecera();
        vaciarTabla();
        cargarProductosPedidos();
    }
    public PedidosCargar(int id_pedido) {
        this.id_pedido = id_pedido;
        initComponents();
        cargarMesas();
        cargarMeseros();
        
        armarCabecera();
        vaciarTabla();
        cargarProductosPedidos();
        this.setLocation(60, 10);
//        jbQuitarProducto.setVisible(false);
    }

    public static int getId_pedido() {
        return id_pedido;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcMesas = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jbAgregarProducto = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcMeseros = new javax.swing.JComboBox<>();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTablaProductosPedidos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtpNumeroPedido = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtpMesa = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtpMesero = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtpFecha = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtpImporte = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jbAgregarPedido = new javax.swing.JButton();
        jbQuitarProducto = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(480, 520));

        jLabel1.setText("Pedidos");

        jcMesas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcMesasItemStateChanged(evt);
            }
        });
        jcMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMesasActionPerformed(evt);
            }
        });

        jLabel2.setText("Mesas:");

        jbAgregarProducto.setText("Agregar Producto/s");
        jbAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarProductoActionPerformed(evt);
            }
        });

        jLabel4.setText("Detalle del pedido:");

        jLabel10.setText("Mesero:");

        jcMeseros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcMeserosItemStateChanged(evt);
            }
        });
        jcMeseros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMeserosActionPerformed(evt);
            }
        });

        jTabbedPane5.setToolTipText("");
        jTabbedPane5.setName(""); // NOI18N

        jtTablaProductosPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtTablaProductosPedidos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtTablaProductosPedidosFocusGained(evt);
            }
        });
        jtTablaProductosPedidos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtTablaProductosPedidosPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jtTablaProductosPedidos);

        jTabbedPane5.addTab("Productos", jScrollPane2);

        jLabel7.setText("NÂ° de pedido:");

        jScrollPane4.setViewportView(jtpNumeroPedido);

        jLabel11.setText("Mesa :");

        jScrollPane7.setViewportView(jtpMesa);

        jLabel6.setText("Mesero:");

        jScrollPane5.setViewportView(jtpMesero);

        jLabel8.setText("Fecha y hora:");

        jScrollPane6.setViewportView(jtpFecha);

        jScrollPane3.setViewportView(jtpImporte);

        jLabel5.setText("Importe total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11))
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Datos", jPanel1);

        jbAgregarPedido.setText("Agregar pedido");
        jbAgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarPedidoActionPerformed(evt);
            }
        });

        jbQuitarProducto.setText("Quitar producto");
        jbQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarProductoActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(445, 445, 445))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(201, 201, 201))))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcMesas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcMeseros, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(76, 76, 76))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbQuitarProducto)
                                .addGap(18, 18, 18)
                                .addComponent(jbAgregarPedido)
                                .addGap(61, 61, 61)
                                .addComponent(jbSalir)))
                        .addContainerGap(49, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jbAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcMesas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcMeseros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAgregarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAgregarPedido)
                    .addComponent(jbSalir)
                    .addComponent(jbQuitarProducto))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarProductoActionPerformed
        this.dispose();
        Escritorio.removeAll();
        Escritorio.repaint();
        PedidosAgregarProductos pap = new PedidosAgregarProductos();
        pap.setVisible(true);
        Escritorio.add(pap);
        Escritorio.moveToFront(pap);
        pap.setLocation(100,60);
    }//GEN-LAST:event_jbAgregarProductoActionPerformed

    private void jcMesasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcMesasItemStateChanged
        
    }//GEN-LAST:event_jcMesasItemStateChanged

    private void jcMeserosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcMeserosItemStateChanged

    }//GEN-LAST:event_jcMeserosItemStateChanged

    private void jcMeserosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMeserosActionPerformed
        cargarDetalle();
    }//GEN-LAST:event_jcMeserosActionPerformed

    private void jcMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMesasActionPerformed
        cargarDetalle();
    }//GEN-LAST:event_jcMesasActionPerformed

    private void jbAgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarPedidoActionPerformed
        PedidoData pd = new PedidoData();
        double importe = Double.parseDouble(jtpImporte.getText());
        if (importe < 1) { 
            JOptionPane.showMessageDialog(null, "Debe cargar al menos 1 producto en el pedido");
        } else {
            Mesa mesa = (Mesa)jcMesas.getSelectedItem();
            Mesero mesero = (Mesero) jcMeseros.getSelectedItem();
            /*DateTimeFormatter fechaF = DateTimeFormatter.ofPattern("d/M/yyyy");
            DateTimeFormatter horaF = DateTimeFormatter.ofPattern("HH:mm");*/
            LocalDate fecha = LocalDate.now();
            LocalTime hora = LocalTime.now();
            
            pd.agregarPedido (this.id_pedido, mesa.getId_mesa(), mesero.getId_mesero(),  fecha,  hora,  importe);
            
            this.dispose();
            Escritorio.removeAll();
            Escritorio.repaint();
            
            int id_pedido = pd.crearPedido();
            
            PedidosCargar pc = new PedidosCargar(id_pedido);
            pc.setVisible(true);
            Escritorio.add(pc);
            Escritorio.moveToFront(pc);
        }
        
    }//GEN-LAST:event_jbAgregarPedidoActionPerformed

    private void jbQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarProductoActionPerformed
        if (jtTablaProductosPedidos.getSelectedRowCount() > 0) {
            ProductosPedidosData ppd = new ProductosPedidosData();
            int exito = 0;
            for (int i = 0; i < jtTablaProductosPedidos.getSelectedRowCount(); i++) {
                int fila = jtTablaProductosPedidos.getSelectedRows()[i];
                int id_prod = Integer.parseInt(jtTablaProductosPedidos.getValueAt(fila, 0).toString());
                if(ppd.quitarProducto(id_prod, this.id_pedido) > 0) {
                    exito++;
                }
            }
            if (exito == 1) {
                JOptionPane.showMessageDialog(null, "Se quitÃ³ el producto exitosamente.");
            } else if (exito > 1) {
                JOptionPane.showMessageDialog(null, "Se quitaron los productos exitosamente.");
            }
            vaciarTabla();
            cargarProductosPedidos();
            cargarDetalle();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto.");
        }    
        if (jtTablaProductosPedidos.getRowCount() > 0){
            jbSalir.setEnabled(false);
        } else {
            jbSalir.setEnabled(true);
        }
    }//GEN-LAST:event_jbQuitarProductoActionPerformed

    private void jtTablaProductosPedidosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtTablaProductosPedidosFocusGained
//        if (jtTablaProductosPedidos.getSelectedRowCount() > 0) {
//            jbQuitarProducto.setVisible(true);
//        } else {
//            jbQuitarProducto.setVisible(false);
//        }
    }//GEN-LAST:event_jtTablaProductosPedidosFocusGained

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        PedidoData pd = new PedidoData();
        pd.eliminarPedidosVacios();
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtTablaProductosPedidosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtTablaProductosPedidosPropertyChange
        if (jtTablaProductosPedidos.getRowCount() > 0){
            jbSalir.setEnabled(false);
        } else {
            jbSalir.setEnabled(true);
        }
    }//GEN-LAST:event_jtTablaProductosPedidosPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JButton jbAgregarPedido;
    private javax.swing.JButton jbAgregarProducto;
    private javax.swing.JButton jbQuitarProducto;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Mesa> jcMesas;
    private javax.swing.JComboBox<Mesero> jcMeseros;
    private javax.swing.JTable jtTablaProductosPedidos;
    private javax.swing.JTextPane jtpFecha;
    private javax.swing.JTextPane jtpImporte;
    private javax.swing.JTextPane jtpMesa;
    private javax.swing.JTextPane jtpMesero;
    private javax.swing.JTextPane jtpNumeroPedido;
    // End of variables declaration//GEN-END:variables
private void armarCabecera(){
    modelo.addColumn("CÃ³digo");
    modelo.addColumn("Nombre");
    modelo.addColumn("Precio");
    modelo.addColumn("Cantidad");
    jtTablaProductosPedidos.setModel(modelo);
}
    private void vaciarTabla () {
        for (int i = modelo.getRowCount()-1; i >= 0;i--){
            modelo.removeRow(i);
        }
    }
    private void cargarProductosPedidos (){
            ProductosPedidosData prodPedidos = new ProductosPedidosData();
            List <ProductosPedidos> listaPp = prodPedidos.listarProductosPedidos(PedidosCargar.id_pedido);
            ProductoData pd = new ProductoData();
            Producto prod;
            for (ProductosPedidos aux :listaPp){
                prod = pd.getProducto(aux.getId_producto());
                modelo.addRow(new Object[]{prod.getId_producto(),prod.getNombre(),prod.getPrecio(), aux.getCantidad()});
            }
            
    }
    private void cargarMesas () {
        MesaData md = new MesaData();
        List<Mesa> mesas = md.listarMesas();
        
        for (Mesa aux : mesas) {
            if (aux.isEstado()) {
                jcMesas.addItem(aux);
            }
        }
    }
    private void cargarMeseros () {
        MeseroData md = new MeseroData();
        List<Mesero> meseros = md.listarMeseros();
        
        for (Mesero aux : meseros) {
            if (aux.isEstado()) {
                jcMeseros.addItem(aux);
            }
        }
    }
    
    private void cargarDetalle() {
        if(jcMesas.getSelectedItem()!= null &&  jcMeseros.getSelectedItem()!= null) {
            Mesa mesa = (Mesa) jcMesas.getSelectedItem();
            Mesero mesero = (Mesero) jcMeseros.getSelectedItem();

            DateTimeFormatter horaF = DateTimeFormatter.ofPattern("HH:mm");
            DateTimeFormatter fecheF = DateTimeFormatter.ofPattern("d/M/yyyy");
            jtpNumeroPedido.setText(""+this.id_pedido);
            jtpMesa.setText("" + mesa.getId_mesa());
            jtpMesero.setText(mesero.getNombre() +" "+ mesero.getApellido());
            if(jtTablaProductosPedidos.getRowCount() > 0) {
                
                ProductosPedidosData ppd = new ProductosPedidosData();
                jtpImporte.setText(""+ ppd.calcularImporte());
            } else {
                jtpImporte.setText(""+0);
            }
            jtpFecha.setText(LocalDate.now().format(fecheF) +" ; "+ LocalTime.now().format(horaF));
        }   
        
        
    }
}
